document.addEventListener('DOMContentLoaded', function() {
  const downloadBtn = document.getElementById('downloadBtn');
  const videoUrlInput = document.getElementById('videoUrl');
  const statusDiv = document.getElementById('status');

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ TikTok ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {
    const currentUrl = tabs[0].url;
    if (currentUrl && currentUrl.includes('tiktok.com')) {
      videoUrlInput.value = currentUrl;
    }
  });

  downloadBtn.addEventListener('click', async function() {
    const url = videoUrlInput.value.trim();
    
    if (!url) {
      showStatus('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà URL ‡∏Ç‡∏≠‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ TikTok', 'error');
      return;
    }

    if (!url.includes('tiktok.com')) {
      showStatus('URL ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ URL ‡∏à‡∏≤‡∏Å TikTok', 'error');
      return;
    }

    downloadBtn.disabled = true;
    showStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•...', 'info');

    try {
      // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ API ‡πÅ‡∏ö‡∏ö Proxy
      const apiUrl = `https://www.tikwm.com/api/?url=${encodeURIComponent(url)}`;
      
      const response = await fetch(apiUrl, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
        }
      });

      if (!response.ok) {
        throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API ‡πÑ‡∏î‡πâ');
      }

      const data = await response.json();
      
      if (data.code === 0 && data.data) {
        const videoData = data.data;
        let downloadUrl = null;
        
        // ‡∏´‡∏≤ URL ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏≤‡∏¢‡∏ô‡πâ‡∏≥
        if (videoData.hdplay) {
          downloadUrl = videoData.hdplay;
        } else if (videoData.play) {
          downloadUrl = videoData.play;
        } else if (videoData.wmplay) {
          downloadUrl = videoData.wmplay;
        }

        if (downloadUrl) {
          showStatus('‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î...', 'info');
          
          // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
          const videoTitle = videoData.title || 'tiktok_video';
          const safeTitle = videoTitle.substring(0, 50).replace(/[^a-z0-9‡∏Å-‡πô]/gi, '_');
          const filename = `${safeTitle}_${Date.now()}.mp4`;
          
          // ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
          chrome.downloads.download({
            url: downloadUrl,
            filename: filename,
            saveAs: true
          }, function(downloadId) {
            if (chrome.runtime.lastError) {
              showStatus('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + chrome.runtime.lastError.message, 'error');
              downloadBtn.disabled = false;
            } else if (downloadId) {
              showStatus('‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! üéâ', 'success');
              setTimeout(() => {
                downloadBtn.disabled = false;
              }, 2000);
            } else {
              showStatus('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ', 'error');
              downloadBtn.disabled = false;
            }
          });
        } else {
          throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î');
        }
      } else {
        throw new Error(data.msg || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÑ‡∏î‡πâ');
      }
    } catch (error) {
      console.error('Error:', error);
      showStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏≠‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô...', 'info');
      
      // ‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏£‡∏≠‡∏á: ‡πÉ‡∏ä‡πâ API ‡∏≠‡∏∑‡πà‡∏ô
      tryAlternativeAPI(url);
    }
  });

  async function tryAlternativeAPI(url) {
    try {
      // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ API ‡∏≠‡∏∑‡πà‡∏ô
      const apiUrl = `https://tikdownloader.io/api/ajaxSearch`;
      
      const formData = new FormData();
      formData.append('q', url);
      formData.append('lang', 'th');
      
      const response = await fetch(apiUrl, {
        method: 'POST',
        body: formData
      });
      
      const data = await response.json();
      
      if (data.status === 'ok' && data.data) {
        // Parse HTML response ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤ download link
        const parser = new DOMParser();
        const doc = parser.parseFromString(data.data, 'text/html');
        const downloadLink = doc.querySelector('a[href*=".mp4"]');
        
        if (downloadLink) {
          const downloadUrl = downloadLink.href;
          showStatus('‡∏û‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î...', 'info');
          
          chrome.downloads.download({
            url: downloadUrl,
            filename: `tiktok_${Date.now()}.mp4`,
            saveAs: true
          }, function(downloadId) {
            if (downloadId) {
              showStatus('‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! üéâ', 'success');
            } else {
              showAlternativeMethod(url);
            }
            downloadBtn.disabled = false;
          });
          return;
        }
      }
      
      throw new Error('API ‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ');
    } catch (error) {
      console.error('Alternative API Error:', error);
      showAlternativeMethod(url);
      downloadBtn.disabled = false;
    }
  }

  function showStatus(message, type) {
    statusDiv.textContent = message;
    statusDiv.className = 'status ' + type;
  }

  function showAlternativeMethod(url) {
    downloadBtn.disabled = false;
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    statusDiv.innerHTML = `
      <strong>‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:</strong><br>
      1. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å URL ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏ó‡∏µ‡πà <a href="https://snaptik.app" target="_blank" style="color: white; text-decoration: underline;">SnaptikApp</a><br>
      2. ‡∏´‡∏£‡∏∑‡∏≠ <a href="https://tikmate.app" target="_blank" style="color: white; text-decoration: underline;">TikMate</a><br>
      3. ‡∏´‡∏£‡∏∑‡∏≠ <a href="https://ssstik.io" target="_blank" style="color: white; text-decoration: underline;">SSSTik</a>
    `;
    statusDiv.className = 'status info';
  }
});
